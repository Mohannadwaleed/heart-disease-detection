# -*- coding: utf-8 -*-
"""Logistic_Regression_model

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cErD_G0t-eTdQ56uhMun6-VB9N8VUJHR
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

from google.colab import drive
drive.mount('/content/drive')

data_heart = pd.read_csv("/content/drive/MyDrive/heart.csv")
data_heart

data_heart.shape

data_heart.info()

data_heart ['Age'].hist(color='skyblue', edgecolor='black')
plt.show()

sns.countplot(data=data_heart , x='target',hue='target')
plt.show()

# Assuming 'trestbps' is the column in your DataFrame
# If your DataFrame is named 'data_heart', replace it with your actual DataFrame name
plt.hist(data_heart['trestbps'], bins=20, color='skyblue', edgecolor='black')

plt.xlabel('Resting Blood Pressure')
plt.ylabel('Frequency')
plt.title('Distribution of Resting Blood Pressure')

plt.show()

x=data_heart.iloc[:,0:14]
x.head()

y=data_heart.iloc[:,14]
y.head()

x_train, x_test, y_train , y_test = train_test_split(x,y,test_size = 0.20)

print ("size of x_train is ", x_train.shape)
print ("size of y_train is ", y_train.shape)
print ("size of x_test is ", x_test.shape)
print ("size of y_test is ", y_test.shape)

LRClassifier = LogisticRegression (random_state = 0)
LRClassifier.fit (x_train,y_train)

#predict the values

predicition = LRClassifier.predict(x_test)
print(predicition)

print("accuracy = ", accuracy_score(y_test,predicition)*100,"%")